package group8.visualisation;

import group8.algorithm.AlgorithmState;
import group8.cli.AppConfig;
import group8.models.Schedule;

/**
 * This class stores information on the current running algorithm.
 * The fields in this class are used for visualisation.
 * This class is singleton.
 * Setters and getInstance are thread safe.
 */
public class AlgorithmStatus {
    private static AlgorithmStatus _instance = null;

    private Schedule _currentBestSchedule;
    private long _numSchedulesGenerated = 0;
    // AlgoState can be either NOT_RUNNING RUNNING or FINISHED
    private AlgorithmState _algoState = AlgorithmState.NOT_RUNNING;
    // Number of schedules generated by each core.
    private long[] _numSchedulesOnCores = new long[AppConfig.getInstance().getNumCores()];

    private AlgorithmStatus() {
    }

    // Singleton getInstance
    public static synchronized AlgorithmStatus getInstance() {
        if (_instance == null) {
            _instance = new AlgorithmStatus();
        }
        return _instance;
    }

    public Schedule getCurrentBestSchedule() {
        return _currentBestSchedule;
    }

    public synchronized void setCurrentBestSchedule(Schedule _currentBestSchedule) {
        this._currentBestSchedule = _currentBestSchedule;
    }

    public long getNumSchedulesGenerated() {
        return _numSchedulesGenerated;
    }

    public synchronized void incrementSchedulesGenerated() {
        _numSchedulesGenerated++;
    }

    public synchronized void setNumSchedulesGenerated(long _numSchedulesGenerated) {
        this._numSchedulesGenerated = _numSchedulesGenerated;
    }

    public AlgorithmState getAlgoState() {
        return _algoState;
    }

    public synchronized void setAlgoState(AlgorithmState _algoState) {
        this._algoState = _algoState;
    }

    public long[] getNumSchedulesOnCores() {
        return _numSchedulesOnCores;
    }

    /**
     * Set the TOTAL number of schedules generated by a core.
     * @param core which core? starting from 0.
     * @param numSchedules long number of schedules :)
     */
    public synchronized void setScheduleOnCores(int core, long numSchedules) {
        _numSchedulesOnCores[core] = numSchedules;
    }

    /**
     * Set the whole schedules on cores array.
     * @param cores
     */
    public synchronized void setNumSchedulesOnCores(long[] cores) {
        _numSchedulesOnCores = cores;
    }
}
